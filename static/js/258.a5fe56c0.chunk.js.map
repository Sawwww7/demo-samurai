{"version":3,"file":"static/js/258.a5fe56c0.chunk.js","mappings":"+IACA,QAAmC,sCAAnC,EAAqF,+BAArF,EAA4H,2BAA5H,EAA8J,0BAA9J,EAAkM,6BAAlM,EAAuO,2BAAvO,EAA0Q,2B,6HCC1Q,MAqEA,EArEgCA,IAE9B,IAAKC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IAClCC,EAAQC,IAAaF,EAAAA,EAAAA,UAASH,EAAMI,SAEzCE,EAAAA,EAAAA,YAAU,KAERD,EAAUL,EAAMI,OAAO,GACtB,CAACJ,EAAMI,SAeV,OACEG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIP,IACAM,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cACHC,EAAAA,EAAAA,KAAA,QAAMC,cAlBWC,KACvBT,GAAY,EAAK,EAiB2BM,SACnCR,EAAMI,QAAU,sBAItBH,IACCQ,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,SACEG,SAjBcC,IACtBR,EAAUQ,EAAEC,cAAcC,MAAM,EAiBxBC,WAAW,EACXC,OAxBiBC,KACzBhB,GAAY,GACZF,EAAMmB,aAAaf,EAAO,EAuBlBW,MAAOX,QAIT,E,wBCrCV,MAoDA,GAJiCgB,EAAAA,EAAAA,GAAU,CAAEC,KAAM,gBAAlBD,EAhDTE,IAAgC,IAA/B,aAAEC,EAAY,QAAEC,GAASF,EAChD,OACEf,EAAAA,EAAAA,MAAA,QAAMkB,SAAUF,EAAaf,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,YAEVD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cAAa,MAAGkB,EAAAA,EAAAA,IAAY,YAAa,WAAY,GAAIC,EAAAA,QAE9DpB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sBAAqB,KACvBkB,EAAAA,EAAAA,IAAY,GAAI,iBAAkB,GAAIC,EAAAA,GAAO,CAAEC,KAAM,iBAExDnB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2BAA0B,KAC5BkB,EAAAA,EAAAA,IACC,yBACA,4BACA,GACAG,EAAAA,KAEFtB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eACFkB,EAAAA,EAAAA,IAAY,WAAY,UAAW,GAAIG,EAAAA,SAErC,ICqDLC,EAAcC,IAAyC,IAAxC,QAAEP,EAAO,QAAEQ,EAAO,aAAEC,GAAcF,EACrD,OACExB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGwB,IACCvB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAQyB,QAASD,EAAazB,SAAC,YAGnCD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cAAa,KAAGgB,EAAQW,SAAW,MAAQ,SAEhD5B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sBAAqB,KAAGgB,EAAQY,eAAiB,MAAQ,QAE7DZ,EAAQY,iBACP7B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2BAA0B,KAAGgB,EAAQa,8BAG5C9B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cAAa,IAAEgB,EAAQc,YAE5B/B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cACF+B,OAAOC,KAAKhB,EAAQiB,UAAUC,KAAKC,IAEhClC,EAAAA,EAAAA,KAACmC,EAAO,CAENC,aAAcF,EACdG,aAActB,EAAQiB,SAASE,IAF1BA,UAOT,EAIJC,EAAUG,IAAqC,IAApC,aAAEF,EAAY,aAAEC,GAAcC,EAC7C,OACExC,EAAAA,EAAAA,MAAA,OAAKyC,UAAWC,EAAUzC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,KAAAD,SAAIqC,IAAiB,IAAEC,IACnB,EAIV,EA3HoBxB,IAAyE,IAAxE,QAAEE,EAAO,OAAEpB,EAAM,aAAEe,EAAY,QAAEa,EAAO,UAAEkB,EAAS,YAAEC,GAAa7B,GAGhFrB,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,GACvC,IAAKqB,EACH,OAAOf,EAAAA,EAAAA,KAAC2C,EAAAA,EAAS,IAYnB,OACE7C,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKuC,UAAWC,EAAOzC,UACrBC,EAAAA,EAAAA,KAAA,OAAK4C,IAAI,OAAOC,IAAKC,OAGvBhD,EAAAA,EAAAA,MAAA,OAAKyC,UAAWC,EAAmBzC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAAD,SAAMgB,EAAQgC,UACd/C,EAAAA,EAAAA,KAAA,OAAKuC,UAAWC,EAAYzC,UAC1BC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,OACEuC,UAAWC,EACXI,IAAI,SACJC,IAC0B,MAAxB9B,EAAQiC,OAAOC,MAAgBlC,EAAQiC,OAAOC,MAAQC,SAK9DlD,EAAAA,EAAAA,KAAA,OAAAD,SACGwB,IACCzB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOmD,QAAQ,SAASZ,UAAWC,EAAQzC,SAAC,qBAG5CC,EAAAA,EAAAA,KAAA,SACEoD,GAAG,SACHb,UAAWC,EACXrB,KAAM,OACNhB,SAvCeC,IAEvBA,EAAEiD,OAAOC,MAAMC,QACjBd,EAAUrC,EAAEiD,OAAOC,MAAM,GAC3B,SAyCK9D,GACCQ,EAAAA,EAAAA,KAACwD,EAAwB,CAACzC,QAASA,EAASC,SAvClCyC,IAChBf,EAAYe,EAAS,KAwCfzD,EAAAA,EAAAA,KAACqB,EAAW,CACVN,QAASA,EACTQ,QAASA,EACTC,aAAcA,KACZ/B,GAAY,EAAK,KAKvBO,EAAAA,EAAAA,KAAC0D,EAAsB,CAAC/D,OAAQA,EAAQe,aAAcA,KAEtDV,EAAAA,EAAAA,KAAA,OAAAD,SAAMgB,EAAQW,YACd1B,EAAAA,EAAAA,KAAA,OAAAD,SAAMgB,EAAQc,WACd7B,EAAAA,EAAAA,KAAA,OAAAD,SAAMgB,EAAQa,6BACd5B,EAAAA,EAAAA,KAAA,OAAAD,SAAMgB,EAAQiB,SAAS2B,aACvB3D,EAAAA,EAAAA,KAAA,OAAAD,SAAMgB,EAAQiB,SAAS4B,YACvB5D,EAAAA,EAAAA,KAAA,OAAAD,SAAMgB,EAAQiB,SAAS6B,eAErB,EChFV,EAA4B,2BAA5B,EAA+D,uBCA/D,EAAuB,mB,mDCevB,EAZctE,IAEVO,EAAAA,EAAAA,MAAA,OAAKyC,UAAWC,EAAOzC,SAAA,EACrBC,EAAAA,EAAAA,KAAA,OAAK4C,IAAI,GAAGC,IAAKK,IAChB3D,EAAMuE,SACP9D,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAAD,SAAOR,EAAMwE,kB,wBCArB,MAAMC,GAAYC,EAAAA,EAAAA,GAAiB,IAe7BC,EAAUC,EAAAA,MAAY5E,IAC1B6E,QAAQC,IAAI,UACZD,QAAQC,IAAI9E,GACZ,IAAI+E,EAAgB/E,EAAMgF,MAAMtC,KAAKuC,IACnCxE,EAAAA,EAAAA,KAACyE,EAAI,CAACX,QAASU,EAAEV,QAASC,WAAYS,EAAET,eAQ1C,OACEjE,EAAAA,EAAAA,MAAA,OAAKyC,UAAWC,EAAYzC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAC0E,EAAmB,CAAC1D,SAPR2D,IACfpF,EAAMqF,QAAQD,EAAOE,YAAY,KAO/B7E,EAAAA,EAAAA,KAAA,OAAKuC,UAAWC,EAAQzC,SAAEuE,MACtB,IAqBJI,GAAsB/D,EAAAA,EAAAA,GAAU,CAAEC,KAAM,yBAAlBD,EAjBJpB,IAEpBO,EAAAA,EAAAA,MAAA,QAAMkB,SAAUzB,EAAMuB,aAAaf,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAC8E,EAAAA,EAAK,CACJC,YAAa,eACbC,KAAM,cACNC,UAAW7D,EAAAA,GACX8D,SAAU,CAACC,EAAAA,EAAUnB,QAGzBhE,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cACRC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBASd,I,cChDA,MAEA,GAFyBqF,E,QAAAA,KAfFC,IACd,CAELd,MAAOc,EAAMC,YAAYf,MACzBM,YAAaQ,EAAMC,YAAYT,gBAGTU,IACjB,CACLX,QAAUC,IACRU,GAASC,EAAAA,EAAAA,IAAqBX,GAAa,KAKxBO,CAA6ClB,GCGtE,EAjBiB3E,IAGbO,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACyF,EAAW,CACVlE,QAAShC,EAAMgC,QACfkB,UAAWlD,EAAMkD,UACjB1B,QAASxB,EAAMwB,QACfpB,OAAQJ,EAAMI,OACde,aAAcnB,EAAMmB,aACpBgC,YAAcnD,EAAMmD,eAEtB1C,EAAAA,EAAAA,KAAC0F,EAAgB,M,wHCiBvB,MAAMC,UAAyBxB,EAAAA,UAC7ByB,cAAAA,GACE,IAAI7C,EAAS8C,KAAKtG,MAAMuG,OAAOC,OAAOhD,OAEtC,IAAKA,IACHA,EAAS8C,KAAKtG,MAAMyG,kBACfjD,GAAQ,OAAO/C,EAAAA,EAAAA,KAACiG,EAAAA,GAAQ,CAACC,GAAI,WAEpCL,KAAKtG,MAAM4G,gBAAgBpD,GAC3B8C,KAAKtG,MAAM6G,UAAUrD,EACvB,CACAsD,iBAAAA,GAEER,KAAKD,gBACP,CACAU,kBAAAA,CAAmBC,EAAWC,GAExBX,KAAKtG,MAAMuG,OAAOC,OAAOhD,SAAWwD,EAAUT,OAAOC,OAAOhD,QAC9D8C,KAAKD,gBACT,CACAa,MAAAA,GAGE,OACEzG,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAC0G,EAAAA,QAAO,IACFb,KAAKtG,MACTgC,SAAUsE,KAAKtG,MAAMuG,OAAOC,OAAOhD,OACnChC,QAAS8E,KAAKtG,MAAMwB,QACpBpB,OAAQkG,KAAKtG,MAAMI,OACnBe,aAAcmF,KAAKtG,MAAMmB,aACzB+B,UAAWoD,KAAKtG,MAAMkD,UACtBC,YAAcmD,KAAKtG,MAAMmD,eAIjC,EAaF,SAAeiE,EAAAA,EAAAA,KACbvB,EAAAA,EAAAA,KAXqBC,IAEd,CACLtE,QAASsE,EAAMC,YAAYvE,QAC3BpB,OAAQ0F,EAAMC,YAAY3F,OAC1BqG,iBAAkBX,EAAMuB,KAAKxD,GAC7ByD,OAAQxB,EAAMuB,KAAKC,UAKI,CAAEV,gBAAe,KAAEC,UAAS,KAAE1F,aAAY,KAAE+B,UAAS,KAAEC,YAAY,QAnE9F,SAAoBoE,GAclB,OAbA,SAAiCvH,GAC/B,IAAIwH,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXnB,GAASoB,EAAAA,EAAAA,KAQb,OAAOnH,EAAAA,EAAAA,KAAC8G,EAAS,IAAKvH,EAAOuG,OAAQ,CAAEiB,WAAUE,WAAUlB,WAC7D,CAEF,GAmDA,CAIEJ,E,8FCnFF,MAAMyB,EAAcvG,IAAoD,IAAnD,MAAEwG,EAAOC,MAAM,QAAEC,EAAO,MAAEC,GAAO,SAAEzH,GAAUc,EAChE,MAAM4G,EAAWF,GAAWC,EAC5B,OACE1H,EAAAA,EAAAA,MAAA,OAAKyC,UAAWmF,EAAAA,EAAOC,YAAc,KAAOF,EAAWC,EAAAA,EAAOF,MAAQ,KAAKzH,SAAA,EACzEC,EAAAA,EAAAA,KAAA,OAAAD,SAAMA,IACL0H,IAAYzH,EAAAA,EAAAA,KAAA,QAAMuC,UAAWmF,EAAAA,EAAOE,KAAK7H,SAAEyH,MACxC,EAIGpG,EAAY7B,IACvB,MAAM,MAAE8H,EAAK,KAAEC,EAAI,MAAEO,KAAUC,GAAcvI,EAC7C,OACES,EAAAA,EAAAA,KAACoH,EAAW,IAAK7H,EAAKQ,UACpBC,EAAAA,EAAAA,KAAA,eAAcqH,KAAWS,KACb,EAGL5G,EAAS3B,IACpB,MAAM,MAAE8H,EAAK,KAAEC,EAAI,MAAEO,KAAUC,GAAcvI,EAC7C,OACES,EAAAA,EAAAA,KAACoH,EAAW,IAAK7H,EAAKQ,UACpBC,EAAAA,EAAAA,KAAA,YAAWqH,KAAWS,KACV,EAIL7G,EAAc,SACzB8D,EACAC,EACAE,EACAD,GAAS,IACT1F,EAAKwI,UAAAxE,OAAA,QAAAyE,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACTE,EAAIF,UAAAxE,OAAA,QAAAyE,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAAG,OAEVjI,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC8E,EAAAA,EAAK,CACJC,YAAaA,EACbC,KAAMA,EACNE,SAAUA,EACVD,UAAWA,KACP1F,IACH,IACF0I,IACG,C,0CChDD,MAAM9C,EAAY7E,IACvB,IAAIA,EACJ,MAAO,mBAAmB,EAGf2D,EAAoBD,GAAe1D,IAC9C,GAAIA,EAAMiD,OAASS,EAAW,MAAM,iBAANkE,OAAwBlE,EAAS,WAC/C,C,kCCNlB,SAAgB,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,wC","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.js","utils/validadors/validator.js","webpack://my-app/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__gR0pP\",\"mainPhoto\":\"ProfileInfo_mainPhoto__zy2Zi\",\"photo\":\"ProfileInfo_photo__7K4Yw\",\"item\":\"ProfileInfo_item__8XQEw\",\"contact\":\"ProfileInfo_contact__5RSm4\",\"input\":\"ProfileInfo_input__QcBbt\",\"label\":\"ProfileInfo_label__O5yJP\"};","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  //debugger;\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    //debugger;\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <b>Status: </b>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"status missing\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n/*extends Component {\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status,\r\n  };\r\n  activateEditMode = () => {\r\n    this.setState({ editMode: true });\r\n  };\r\n  deactivateEditMode = () => {\r\n    this.setState({ editMode: false });\r\n    this.props.updateStatus(this.state.status);\r\n  };\r\n  onStatusChange = (e) => {\r\n    this.setState({ status: e.currentTarget.value });\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({ status: this.props.status });\r\n    }\r\n    console.log(\"componentDidUpdate\");\r\n  }*/\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport {\r\n  Input,\r\n  Textarea,\r\n  createField,\r\n} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <button>save</button>\r\n      </div>\r\n      <div>\r\n        <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>:\r\n        {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n      </div>\r\n      <b>My professional skills</b>:\r\n      {createField(\r\n        \"My professional skills\",\r\n        \"lookingForAJobDescription\",\r\n        [],\r\n        Textarea\r\n      )}\r\n      <div>\r\n        <b>About me:</b>\r\n        {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\n/*<div>\r\n<b>Contacts:</b>\r\n{Object.keys(profile.contacts).map((key) => {\r\n  return (\r\n    <Contact\r\n      key={key}\r\n      contactTitle={key}\r\n      contactValue={profile.contacts[key]}\r\n    />\r\n  );\r\n})}\r\n</div>\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div>\r\n      <b>{contactTitle}</b>:{contactValue}\r\n    </div>\r\n  );\r\n};*/\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: \"edit-profile\" })(\r\n  ProfileDataForm\r\n);\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import React, { useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Photo from \"../../../assets/images/sky.png\";\r\nimport userPhoto from \"../../../assets/images/pngegg.png\";\r\nimport Preloader from \"../../common/Preloader/Pleloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n  //debugger;\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  const onMainPhotoSelected = (e) => {\r\n    //debugger;\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData)\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={s.item}>\r\n        <img alt=\"phon\" src={Photo} />\r\n      </div>\r\n\r\n      <div className={s.descriptionBlock}>\r\n        <div>{profile.userId}</div>\r\n        <div className={s.mainPhoto}>\r\n          <div>\r\n            <img\r\n              className={s.photo}\r\n              alt=\"photos\"\r\n              src={\r\n                profile.photos.large != null ? profile.photos.large : userPhoto\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {isOwner && (\r\n            <div>\r\n              <label htmlFor=\"formId\" className={s.label}>\r\n                set your avatar\r\n              </label>\r\n              <input\r\n                id=\"formId\"\r\n                className={s.input}\r\n                type={\"file\"}\r\n                onChange={onMainPhotoSelected}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {editMode ? (\r\n          <ProfileDataFormReduxForm profile={profile} onSubmit={onSubmit}/>\r\n        ) : (\r\n          <ProfileData\r\n            profile={profile}\r\n            isOwner={isOwner}\r\n            goToEditMode={() => {\r\n              setEditMode(true);\r\n            }}\r\n          />\r\n        )}\r\n\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n\r\n        <div>{profile.fullName}</div>\r\n        <div>{profile.aboutMe}</div>\r\n        <div>{profile.lookingForAJobDescription}</div>\r\n        <div>{profile.contacts.instagram}</div>\r\n        <div>{profile.contacts.facebook}</div>\r\n        <div>{profile.contacts.twitter}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && (\r\n        <div>\r\n          <button onClick={goToEditMode}>edit</button>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>Full name</b>: {profile.fullName ? \"Yes\" : \"no\"}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>: {profile.lookingForAJob ? \"Yes\" : \"no\"}\r\n      </div>\r\n      {profile.lookingForAJob && (\r\n        <div>\r\n          <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>About me:</b> {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts:</b>\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <Contact\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={s.contact}>\r\n      <b>{contactTitle}</b>:{contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlok\":\"MyPosts_postsBlok__JamY8\",\"posts\":\"MyPosts_posts__kAE7S\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__kzAtf\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\nimport userPhoto from \"../../../../assets/images/gerl.png\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img alt=\"\" src={userPhoto} />\r\n      {props.messege}\r\n      <div>\r\n        <span>{props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from \"./../../../utils/validadors/validator\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength = maxLengthCreator(10);\r\n\r\n/* componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({ a: 12 });\r\n    }, 3000);\r\n    setTimeout(() => {\r\n      this.setState({ b: 14 });\r\n    }, 6000);\r\n  }*/\r\n/*shouldComponentUpdate(nextProps, nextState) {\r\n    //debugger;\r\n    return nextProps !== this.props || nextState !== this.state;\r\n  }*/\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  console.log(\"RENDER\");\r\n  console.log(props);\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post messege={p.messege} likesCount={p.likesCount} />\r\n  ));\r\n  //let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlok}>\r\n      <h1>My posts</h1>\r\n      <AddNewPostReduxForm onSubmit={onAddPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder={\"Post message\"}\r\n          name={\"newPostText\"}\r\n          component={Textarea}\r\n          validate={[required, maxLength]}\r\n        />\r\n      </div>\r\n      <button>Add post</button>\r\n      <button>Remove</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddNewPostReduxForm = reduxForm({ form: \"ProfileAddNewPostForm\" })(\r\n  AddNewPostForm\r\n);\r\n\r\nexport default MyPosts;\r\n","import MyPosts from \"./MyPosts\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    //state: state,\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n/*\r\n    import StoreContex from \"../../../StoreContext\";\r\n    let onPostChange = (text) => {\r\n    let action = updateNewPostTextActionCreator(text);\r\n    props.store.dispatch(action);*/\r\n\r\n/*const MyPostsContainer = () => {\r\n  return (\r\n    <StoreContex.Consumer>\r\n      {(store) => {\r\n        let state = store.getState();\r\n        let addPost = () => {\r\n          store.dispatch(addPostActionCreator());\r\n        };\r\n        let onPostChange = (text) => {\r\n          store.dispatch(updateNewPostTextActionCreator(text));\r\n        };\r\n        return (\r\n          <MyPosts\r\n            updateNewPostText={onPostChange}\r\n            addPost={addPost}\r\n            posts={state.profilePage.posts}\r\n            newPostText={state.profilePage.newPostText}\r\n          />\r\n        );\r\n      }}\r\n    </StoreContex.Consumer>\r\n  );\r\n};*/\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostContainer\";\r\n//import s from \"./Profile.module.css\";\r\n\r\nconst Profile = (props) => {\r\n  //debugger;\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        isOwner={props.isOwner}\r\n        savePhoto={props.savePhoto}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        saveProfile ={props.saveProfile}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\n/*posts={props.profilePage.posts}\r\n        newPostText={props.profilePage.newPostText}\r\n        dispatch={props.dispatch}\r\n        //updateNewPostText={props.updateNewPostText}\r\n        //addPost={props.addPost}*/\r\n","import React from \"react\"; /*{ useEffect }*/\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUsersProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile\r\n} from \"../../redux/profile-reducer\";\r\n//import { withRouter } from \"react-router-dom\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { Navigate } from \"react-router-dom\";\r\n//import { userAPI } from \"../../api/api\";\r\n//import { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n\r\n    /* useEffect(() => {\r\n      if (!props.isAuth) {\r\n        navigate(\"/login\");\r\n      }\r\n    }, [props.isAuth, navigate]);*/\r\n\r\n    return <Component {...props} router={{ location, navigate, params }} />;\r\n  }\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.router.params.userId;\r\n\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) return <Navigate to={\"/login\"} />;\r\n    }\r\n    this.props.getUsersProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    //debugger;\r\n    this.refreshProfile();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    //debugger;\r\n    if (this.props.router.params.userId !== prevProps.router.params.userId)\r\n      this.refreshProfile();\r\n  }\r\n  render() {\r\n    //console.log(\"RENDER PROFILE\");\r\n    // if (!this.props.isAuth) return <Navigate to={\"/login\"} />;\r\n    return (\r\n      <div>\r\n        <Profile\r\n          {...this.props}\r\n          isOwner={!this.props.router.params.userId}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n          savePhoto={this.props.savePhoto}\r\n          saveProfile ={this.props.saveProfile}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  // console.log(\"mapStateToProps PROFILE\");\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUsersProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter\r\n  //withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \" \")}>\r\n      <div>{children}</div>\r\n      {hasError && <span className={styles.span}>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  validate,\r\n  component,\r\n  props = {},\r\n  text = \" \"\r\n) => (\r\n  <div>\r\n    <Field\r\n      placeholder={placeholder}\r\n      name={name}\r\n      validate={validate}\r\n      component={component}\r\n      {...props}\r\n    />{\" \"}\r\n    {text}\r\n  </div>\r\n);\r\n","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__Iy92m\",\"error\":\"FormsControls_error__oOsiQ\",\"formSummaryError\":\"FormsControls_formSummaryError__mxFBl\"};"],"names":["props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","activateEditMode","onChange","e","currentTarget","value","autoFocus","onBlur","deactivateEditMode","updateStatus","reduxForm","form","_ref","handleSubmit","profile","onSubmit","createField","Input","type","Textarea","ProfileData","_ref2","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","Contact","contactTitle","contactValue","_ref3","className","s","savePhoto","saveProfile","Preloader","alt","src","Photo","userId","photos","large","userPhoto","htmlFor","id","target","files","length","ProfileDataFormReduxForm","formData","ProfileStatusWithHooks","instagram","facebook","twitter","messege","likesCount","maxLength","maxLengthCreator","MyPosts","React","console","log","postsElements","posts","p","Post","AddNewPostReduxForm","values","addPost","newPostText","Field","placeholder","name","component","validate","required","connect","state","profilePage","dispatch","addPostActionCreator","ProfileInfo","MyPostsContainer","ProfileContainer","refreshProfile","this","router","params","authorizedUserId","Navigate","to","getUsersProfile","getStatus","componentDidMount","componentDidUpdate","prevProps","prevState","render","Profile","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","FormControl","input","meta","touched","error","hasError","styles","formControl","span","child","restProps","arguments","undefined","text","concat"],"sourceRoot":""}