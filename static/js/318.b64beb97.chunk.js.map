{"version":3,"file":"static/js/318.b64beb97.chunk.js","mappings":"wNASA,MAuBMA,GAAiBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,SAAlBD,EAvBLE,IAA8B,IAA7B,aAAEC,EAAY,MAAEC,GAAOF,EACxC,OACEG,EAAAA,EAAAA,MAAA,QAAMC,SAAUH,EAAaI,SAAA,EAC1BC,EAAAA,EAAAA,IAAY,QAAS,QAAS,CAACC,EAAAA,GAAWC,EAAAA,KAC1CF,EAAAA,EAAAA,IAAY,WAAY,WAAY,CAACC,EAAAA,GAAWC,EAAAA,GAAO,CACtDC,KAAM,cAEPH,EAAAA,EAAAA,IACC,KACA,aACA,GACAE,EAAAA,GACA,CAAEC,KAAM,YACR,eAGDP,IAASQ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,EAAMC,iBAAiBR,SAAEH,KACnDQ,EAAAA,EAAAA,KAAA,OAAAL,UACEK,EAAAA,EAAAA,KAAA,UAAAL,SAAQ,cAEL,IA0BX,GAAeS,EAAAA,EAAAA,KAJUC,IAAK,CAC5BC,OAAQD,EAAME,KAAKD,UAGmB,CAAEE,MAAM,MAAhD,EArBeC,GAKTA,EAAMH,QAEDN,EAAAA,EAAAA,KAACU,EAAAA,GAAQ,CAACC,GAAI,cAGrBlB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEK,EAAAA,EAAAA,KAAA,MAAAL,SAAI,WACJK,EAAAA,EAAAA,KAACb,EAAc,CAACO,SAVFkB,IAChBH,EAAMD,MAAMI,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAW,Q,8FCjCvE,MAAMC,EAAc1B,IAAoD,IAAnD,MAAE2B,EAAOC,MAAM,QAAEC,EAAO,MAAE3B,GAAO,SAAEG,GAAUL,EAChE,MAAM8B,EAAWD,GAAW3B,EAC5B,OACEC,EAAAA,EAAAA,MAAA,OAAKQ,UAAWoB,EAAAA,EAAOC,YAAc,KAAOF,EAAWC,EAAAA,EAAO7B,MAAQ,KAAKG,SAAA,EACzEK,EAAAA,EAAAA,KAAA,OAAAL,SAAMA,IACLyB,IAAYpB,EAAAA,EAAAA,KAAA,QAAMC,UAAWoB,EAAAA,EAAOE,KAAK5B,SAAEH,MACxC,EAIGgC,EAAYf,IACvB,MAAM,MAAEQ,EAAK,KAAEC,EAAI,MAAEO,KAAUC,GAAcjB,EAC7C,OACET,EAAAA,EAAAA,KAACgB,EAAW,IAAKP,EAAKd,UACpBK,EAAAA,EAAAA,KAAA,eAAciB,KAAWS,KACb,EAGL5B,EAASW,IACpB,MAAM,MAAEQ,EAAK,KAAEC,EAAI,MAAEO,KAAUC,GAAcjB,EAC7C,OACET,EAAAA,EAAAA,KAACgB,EAAW,IAAKP,EAAKd,UACpBK,EAAAA,EAAAA,KAAA,YAAWiB,KAAWS,KACV,EAIL9B,EAAc,SACzB+B,EACAC,EACAC,EACAC,GAAS,IACTrB,EAAKsB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACTG,EAAIH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAAG,OAEVtC,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEK,EAAAA,EAAAA,KAACmC,EAAAA,EAAK,CACJR,YAAaA,EACbC,KAAMA,EACNC,SAAUA,EACVC,UAAWA,KACPrB,IACH,IACFyB,IACG,C,0CChDD,MAAMrC,EAAYuC,IACvB,IAAIA,EACJ,MAAO,mBAAmB,EAGfC,EAAoBC,GAAeF,IAC9C,GAAIA,EAAMJ,OAASM,EAAW,MAAM,iBAANC,OAAwBD,EAAS,WAC/C,C,kCCNlB,SAAgB,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,wC","sources":["components/Login/Login.jsx","components/common/FormsControls/FormsControls.js","utils/validadors/validator.js","webpack://my-app/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { Input, createField } from \"../common/FormsControls/FormsControls\";\r\nimport { required } from \"../../utils/validadors/validator\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {createField(\"Email\", \"email\", [required], Input)}\r\n      {createField(\"Password\", \"password\", [required], Input, {\r\n        type: \"password\",\r\n      })}\r\n      {createField(\r\n        null,\r\n        \"rememberMe\",\r\n        [],\r\n        Input,\r\n        { type: \"checkbox\" },\r\n        \"remember me\"\r\n      )}\r\n\r\n      {error && <div className={style.formSummaryError}>{error}</div>}\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm);\r\n\r\nconst Login = (props) => {\r\n  //debugger;\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe);\r\n  };\r\n  if (props.isAuth) {\r\n    //debugger;\r\n    return <Navigate to={\"/profile\"} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>LOGIN</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \" \")}>\r\n      <div>{children}</div>\r\n      {hasError && <span className={styles.span}>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  validate,\r\n  component,\r\n  props = {},\r\n  text = \" \"\r\n) => (\r\n  <div>\r\n    <Field\r\n      placeholder={placeholder}\r\n      name={name}\r\n      validate={validate}\r\n      component={component}\r\n      {...props}\r\n    />{\" \"}\r\n    {text}\r\n  </div>\r\n);\r\n","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__PjHgj\",\"error\":\"FormsControls_error__b1sP5\",\"formSummaryError\":\"FormsControls_formSummaryError__T+RBj\"};"],"names":["LoginReduxForm","reduxForm","form","_ref","handleSubmit","error","_jsxs","onSubmit","children","createField","required","Input","type","_jsx","className","style","formSummaryError","connect","state","isAuth","auth","login","props","Navigate","to","formData","email","password","rememberMe","FormControl","input","meta","touched","hasError","styles","formControl","span","Textarea","child","restProps","placeholder","name","validate","component","arguments","length","undefined","text","Field","value","maxLengthCreator","maxLength","concat"],"sourceRoot":""}