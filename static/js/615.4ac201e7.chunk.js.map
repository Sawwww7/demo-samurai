{"version":3,"file":"static/js/615.4ac201e7.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/common/FormsControls/FormsControls.js","utils/validadors/validator.js","webpack://my-app/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__PUEja\",\"dialogsItems\":\"Dialogs_dialogsItems__XNGjf\",\"active\":\"Dialogs_active__eBNhF\",\"messages\":\"Dialogs_messages__MOz2V\",\"message\":\"Dialogs_message__sHaS4\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.message}>{props.messege}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n\r\n/*<div>\r\n\r\n let newMessegsElement = React.createRef();\r\n\r\n  let addPost = () => {\r\n    let text = newMessegsElement.current.value;\r\n    alert(text);\r\n  };\r\n\r\n        <textarea ref={newMessegsElement}> </textarea>\r\n      </div>\r\n      <div>\r\n        <button onClick={addPost}>Add messege</button>\r\n        <button>Remove messege</button>\r\n      </div>*/\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <NavLink to={path}>\r\n        <div>\r\n          <img src={props.avatar} alt=\"\" /> {props.name}\r\n        </div>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n\r\n<div>\r\n  <img\r\n    alt=\"\"\r\n    src=\"https://img.freepik.com/free-photo/3d-render-dead-tree-see-with-moon-sky_1048-13015.jpg?w=1480&t=st=1706292225~exp=1706292825~hmac=1327ae18ad4f2e45a66faa600b1249407ba664fde8fd613bf6390bcdf5d13c13\"\r\n  />\r\n</div>;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validadors/validator\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name={\"newMassageBody\"}\r\n          placeholder={\"mypost\"}\r\n          validate={[required, maxLength50]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add messege</button>\r\n        <button>Remove messege</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMassageForm\" })(\r\n  AddMessageForm\r\n);\r\n\r\nexport default AddMessageFormRedux;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport AddMessageFormRedux from \"./AddMessageForm/AddMessageForm\";\r\n//import { Field, reduxForm } from \"redux-form\";\r\n//import { Navigate } from \"react-router-dom\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogElemets = state.dialogs.map((d) => (\r\n    <DialogItem avatar={d.avatar} name={d.name} key={d.id} id={d.id} />\r\n  ));\r\n  let messagerElemets = state.messages.map((m) => (\r\n    <Message messege={m.messege} key={m.id} />\r\n  ));\r\n\r\n  //let newMessegsElement = React.createRef();\r\n\r\n  /*let addMessages = () => {\r\n    let text = newMessegsElement.current.value;\r\n    alert(text);\r\n  };*/\r\n\r\n  let addNewMessage = (values) => {\r\n    props.senMessages(values.newMassageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogElemets}</div>\r\n      <div className={s.messages}>{messagerElemets}</div>\r\n      <AddMessageFormRedux onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\n/*const AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={\"textarea\"}\r\n          name={\"newMassageBody\"}\r\n          placeholder={\"mypost\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add messege</button>\r\n        <button>Remove messege</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMassageForm\" })(\r\n  AddMessageForm\r\n);*/\r\n\r\n/*const AddMessage = (props) => {\r\n  const onSubmit = (formData) => {\r\n    console.log(formData);\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>AddMessage</h1>\r\n      <AddMessageFormRedux onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};*/\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","//import React from \"react\";\r\nimport { addMessagesActionCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    senMessages: (newMessageBody) => {\r\n      dispatch(addMessagesActionCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n\r\n/*import StoreContex from \"../../StoreContext\";\r\nconst DialogsContainer = () => {\r\n  return (\r\n    <StoreContex.Consumer>\r\n      {(store) => {\r\n        let state = store.getState().dialogsPage;\r\n\r\n        let onSendMessages = () => {\r\n          store.dispatch(addMessagesActionCreator());\r\n        };\r\n        let onMessagesChange = (text) => {\r\n          store.dispatch(updateNewMessagesTextActionCreator(text));\r\n        };\r\n        return (\r\n          <Dialogs\r\n            updateNewMessagesText={onMessagesChange}\r\n            senMessages={onSendMessages}\r\n            dialogsPage={state}\r\n          />\r\n        );\r\n      }}\r\n    </StoreContex.Consumer>\r\n  );\r\n};*/\r\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \" \")}>\r\n      <div>{children}</div>\r\n      {hasError && <span className={styles.span}>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  validate,\r\n  component,\r\n  props = {},\r\n  text = \" \"\r\n) => (\r\n  <div>\r\n    <Field\r\n      placeholder={placeholder}\r\n      name={name}\r\n      validate={validate}\r\n      component={component}\r\n      {...props}\r\n    />{\" \"}\r\n    {text}\r\n  </div>\r\n);\r\n","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__PjHgj\",\"error\":\"FormsControls_error__b1sP5\",\"formSummaryError\":\"FormsControls_formSummaryError__T+RBj\"};"],"names":["props","_jsx","children","className","s","message","messege","path","id","dialog","active","NavLink","to","_jsxs","src","avatar","alt","name","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","state","dialogsPage","dialogElemets","dialogs","map","d","DialogItem","messagerElemets","messages","m","Message","dialogsItems","AddMessageFormRedux","values","senMessages","newMassageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","newMessageBody","addMessagesActionCreator","Component","RedirectComponent","React","render","this","Navigate","Dialogs","FormControl","_ref","input","meta","touched","error","hasError","styles","formControl","span","child","restProps","Input","createField","arguments","length","undefined","text","value","maxLength","concat"],"sourceRoot":""}